// Place your key bindings in this file to override the defaults
[
	// Navigation
	{
		// Move left between panes
		"key": "space h",
		"command": "workbench.action.navigateLeft",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
	},
	{
		// Move down between panes
		"key": "space j",
		"command": "workbench.action.navigateDown",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
	},
	{
		// Move up between panes
		"key": "space k",
		"command": "workbench.action.navigateUp",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
	},
	{
		// Move right between panes
		"key": "space l",
		"command": "workbench.action.navigateRight",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
	},
	{
		// Split editor to the right
		"key": "space shift-l",
		"command": "workbench.action.splitEditorRight",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
	},
	{
		// Split editor down
		"key": "space shift-j",
		"command": "workbench.action.splitEditorDown",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
	},
	{
		// Search tabs
		"key": "space ,",
		"command": "workbench.action.showAllEditors",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
	},
	{
		// Swap recent editors (ctrl-tab but easier to reach)
		"key": "shift-tab",
		"command": "workbench.action.quickOpenPreviousRecentlyUsedEditor",
		"when": "(vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualLine' || vim.mode == 'VisualBlock') && (editorTextFocus || !inputFocus)"
	},

	// File explorer
	{
		// If in editor, open and focus file explorer
		"key": "space e",
		"command": "runCommands",
		"args": {
			"commands": [
				"workbench.action.toggleSidebarVisibility",
				"workbench.files.action.focusFilesExplorer"
			]
		},
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !sideBarFocus"
	},
	{
		// If in explorer, close it and focus editor
		"key": "space e",
		"command": "runCommands",
		"args": {
			"commands": [
				"workbench.action.toggleSidebarVisibility",
				"workbench.action.focusActiveEditorGroup"
			]
		},
		"when": "sideBarFocus && !inputFocus"
	},
	{
		// If in editor and explorer is open, close it
		"key": "space e",
		"command": "workbench.action.toggleSidebarVisibility",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && foldersViewVisible"
	},

	// Wipe (close)
	{
		// Close sidebar and focus editor when sidebar is focused
		"key": "escape",
		"command": "runCommands",
		"args": {
			"commands": [
				"workbench.action.closeSidebar",
				"workbench.action.focusActiveEditorGroup"
			]
		},
		"when": "sideBarFocus && !explorerViewletVisible"
	},
	{
		// If in auxiliary bar (secondary bar), close it and focus editor
		"key": "escape",
		"command": "runCommands",
		"args": {
			"commands": [
				"workbench.action.closeAuxiliaryBar",
				"workbench.action.focusActiveEditorGroup"
			]
		},
		"when": "auxiliaryBarFocus"
	},
	{
		// If in panel, close it and focus editor
		"key": "escape",
		"command": "runCommands",
		"args": {
			"commands": [
				"workbench.action.closePanel",
				"workbench.action.focusActiveEditorGroup"
			]
		},
		"when": "panelFocus"
	},
	{
		// Close sidebar
		"key": "space w s",
		"command": "workbench.action.closeSidebar",
		"when": "(vim.mode == 'Normal' && editorTextFocus) || !inputFocus"
	},
	{
		// Close auxiliary bar (secondary sidebar)
		"key": "space w a",
		"command": "workbench.action.closeAuxiliaryBar",
		"when": "(vim.mode == 'Normal' && editorTextFocus) || !inputFocus"
	},
	{
		// Close panel
		"key": "space w p",
		"command": "workbench.action.closePanel",
		"when": "(vim.mode == 'Normal' && editorTextFocus) || !inputFocus"
	},

	// Coding
	{
		// Move visual selection up
		"key": "shift-k",
		"command": "editor.action.moveLinesUpAction",
		"when": "vim.mode == 'VisualLine' && editorTextFocus"
	},
	{
		// Move visual selection down
		"key": "shift-j",
		"command": "editor.action.moveLinesDownAction",
		"when": "vim.mode == 'VisualLine' && editorTextFocus"
	},
	{
		// Hover action
		"key": "shift-k",
		"command": "editor.action.showHover",
		"when": "vim.mode == 'Normal' && editorTextFocus"
	},
	{
		// Scroll up in quick open selection (picking tab/file)
		"key": "ctrl-k",
		"command": "workbench.action.quickOpenSelectPrevious",
		"when": "inQuickOpen"
	},
	{
		// Scroll down in quick open selection (picking tab/file)
		"key": "ctrl-j",
		"command": "workbench.action.quickOpenSelectNext",
		"when": "inQuickOpen"
	},
	{
		// Scroll up in code suggestions
		"key": "ctrl+k",
		"command": "selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		// Scroll down in code suggestions
		"key": "ctrl+j",
		"command": "selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		// Open project file search (cmd+p)
		"key": "space space",
		"command": "workbench.action.quickOpen",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
	},
	{
		// Search
		"key": "space shift-f",
		"command": "workbench.action.findInFiles",
		"when": "(vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualLine' || vim.mode == 'VisualBlock') && (editorTextFocus || !inputFocus)"
	},
	{
		// Find in file
		"key": "space f",
		"command": "actions.find",
		"when": "(vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualLine' || vim.mode == 'VisualBlock') && (editorTextFocus || !inputFocus)"
	},
	{
		// Open and focus git control
		"key": "space g",
		"command": "runCommands",
		"args": {
			"commands": ["workbench.view.scm", "workbench.scm.focus"]
		},
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
	},
	{
		// Open command palette
		"key": "space c p",
		"command": "workbench.action.showCommands",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
	},
	{
		// Reload window
		"key": "space c r",
		"command": "workbench.action.reloadWindow",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
	},
	{
		// Selects word and goes to next match, multicursor
		"key": "ctrl-n",
		"command": "editor.action.addSelectionToNextFindMatch",
		"when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
	},
	{
		// Comment line
		"key": "space /",
		"command": "editor.action.commentLine",
		"when": "(vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualLine' || vim.mode == 'VisualBlock') && (editorTextFocus || !inputFocus) && (editorTextFocus && !editorReadonly)"
	},
	{
		// Open copilot chat
		"key": "space i a",
		"command": "workbench.action.chat.open",
		"when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !chatSetupHidden"
	},
	{
		// Open copilot inline chat
		"key": "space i l",
		"command": "inlineChat.start",
		"when": "vim.mode == 'Normal' && editorFocus && inlineChatHasEditsAgent && inlineChatPossible && !editorReadonly && !editorSimpleInput || vim.mode == 'Normal' && editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly && !editorSimpleInput"
	},

	// File explorer
	{
		// Rename file in explorer
		"key": "shift-r",
		"command": "renameFile",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		// Cut file in explorer
		"key": "shift-x",
		"command": "filesExplorer.cut",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		// Delete file in explorer
		"key": "shift-d",
		"command": "deleteFile",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		// Paste file in explorer
		"key": "p",
		"command": "filesExplorer.paste",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		// Copy file in explorer
		"key": "y",
		"command": "filesExplorer.copy",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		// Create new file in explorer
		"key": "a",
		"command": "explorer.newFile",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		// Create new folder in explorer
		"key": "f",
		"command": "explorer.newFolder",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		// Open file from explorer
		"key": "enter",
		"command": "explorer.openAndPassFocus",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceIsFolder && !inputFocus"
	},
	{
		// Expand/collapse folder in explorer
		"key": "enter",
		"command": "list.toggleExpand",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && explorerResourceIsFolder && !inputFocus"
	},
	{
		// Open selection in peek view, might count for other stuff idk
		"key": "o",
		"command": "list.select",
		"when": "listFocus && !inputFocus && !treestickyScrollFocused"
	},
	{
		// In explorer, open file and close sidebar
		"key": "o",
		"command": "runCommands",
		"args": {
			"commands": [
				"explorer.openAndPassFocus",
				"workbench.action.closeSidebar"
			]
		},
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceIsFolder && !inputFocus"
	},
	{
		// Close active editor
		"key": "ctrl-w",
		"command": "workbench.action.closeActiveEditor"
	},
	{
		// Close all editors in group except the active one
		"key": "ctrl-shift-w",
		"command": "workbench.action.closeOtherEditors"
	},

	// Settings
	{
		// Open settings json
		"key": "shift-cmd-,",
		"command": "workbench.action.openSettingsJson"
	},
	{
		// Open keybindings json
		"key": "shift-cmd-k shift-cmd-s",
		"command": "workbench.action.openGlobalKeybindingsFile"
	},

	// Unbindings
	{
		// Run python
		"key": "shift+enter",
		"command": "-python.execInREPL",
		"when": "config.python.REPL.sendToNativeREPL && editorTextFocus && !isCompositeNotebook && !jupyter.ownsSelection && !notebookEditorFocused && editorLangId == 'python'"
	},
	{
		// Run python
		"key": "shift+enter",
		"command": "-python.execSelectionInTerminal",
		"when": "editorTextFocus && !findInputFocussed && !isCompositeNotebook && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
	},
	{
		// Something I misclick and does nothing for me
		"key": "cmd+e",
		"command": "-actions.findWithSelection"
	},
	{
		// Unbind for open settings json
		"key": "shift+cmd+,",
		"command": "-editor.action.inPlaceReplace.up",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		// Unbind for open settings json
		"key": "shift+cmd+,",
		"command": "-workbench.action.terminal.configureSuggestSettings",
		"when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
	},
	{
		// Unbind for closing editor
		"key": "ctrl+w",
		"command": "-workbench.action.switchWindow"
	},
	{
		// Unbind for closing editor
		"key": "ctrl+w",
		"command": "-extension.vim_ctrl+w",
		"when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"
	}
]
